from pyrogram import Client, filters
from dotenv import load_dotenv
import os
import logging
import sys

# === –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
API_HASH = os.getenv("API_HASH")
API_ID_STR = os.getenv("API_ID")

# –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è, —á—Ç–æ–±—ã –≤ –ª–æ–≥–∞—Ö –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫
missing = [k for k, v in [("BOT_TOKEN", BOT_TOKEN), ("API_HASH", API_HASH), ("API_ID", API_ID_STR)] if not v]
if missing:
    print(f"‚ùå –ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing)}")
    sys.exit(1)

try:
    API_ID = int(API_ID_STR)
except ValueError:
    print(f"‚ùå API_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º, –∞ –ø–æ–ª—É—á–µ–Ω–æ: {API_ID_STR!r}")
    sys.exit(1)

# –õ–æ–≥–∏ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é
logging.basicConfig(level=logging.INFO)

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ===
app = Client("my_bot", bot_token=BOT_TOKEN, api_id=API_ID, api_hash=API_HASH)

# /start
@app.on_message(filters.command("start"))
def start_handler(client, message):
    message.reply_text("–ü—Ä–∏–≤–µ—Ç! ‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–∏–≤. –ù–∞–ø–∏—à–∏ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç ‚Äî –æ—Ç–≤–µ—á—É '–Ø –∂–∏–≤!'")

# –õ—é–±–æ–π —Ç–µ–∫—Å—Ç (–∫—Ä–æ–º–µ /start)
@app.on_message(filters.text & ~filters.command("start"))
def alive_handler(client, message):
    message.reply_text("–Ø –∂–∏–≤! ‚úÖ")

if __name__ == "__main__":
    print("‚úÖ –ú–∏–Ω–∏-–±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app.run()
    print("üõë –ú–∏–Ω–∏-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")










